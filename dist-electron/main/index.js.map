{"version":3,"file":"index.js","sources":["../../electron/main/update.ts","../../electron/main/index.ts"],"sourcesContent":["import { app, ipcMain } from 'electron'\nimport { createRequire } from 'node:module'\nimport type {\n  ProgressInfo,\n  UpdateDownloadedEvent,\n  UpdateInfo,\n} from 'electron-updater'\n\nconst { autoUpdater } = createRequire(import.meta.url)('electron-updater');\n\nexport function update(win: Electron.BrowserWindow) {\n\n  // When set to false, the update download will be triggered through the API\n  autoUpdater.autoDownload = false\n  autoUpdater.disableWebInstaller = false\n  autoUpdater.allowDowngrade = false\n\n  // start check\n  autoUpdater.on('checking-for-update', function () { })\n  // update available\n  autoUpdater.on('update-available', (arg: UpdateInfo) => {\n    win.webContents.send('update-can-available', { update: true, version: app.getVersion(), newVersion: arg?.version })\n  })\n  // update not available\n  autoUpdater.on('update-not-available', (arg: UpdateInfo) => {\n    win.webContents.send('update-can-available', { update: false, version: app.getVersion(), newVersion: arg?.version })\n  })\n\n  // Checking for updates\n  ipcMain.handle('check-update', async () => {\n    if (!app.isPackaged) {\n      const error = new Error('The update feature is only available after the package.')\n      return { message: error.message, error }\n    }\n\n    try {\n      return await autoUpdater.checkForUpdatesAndNotify()\n    } catch (error) {\n      return { message: 'Network error', error }\n    }\n  })\n\n  // Start downloading and feedback on progress\n  ipcMain.handle('start-download', (event: Electron.IpcMainInvokeEvent) => {\n    startDownload(\n      (error, progressInfo) => {\n        if (error) {\n          // feedback download error message\n          event.sender.send('update-error', { message: error.message, error })\n        } else {\n          // feedback update progress message\n          event.sender.send('download-progress', progressInfo)\n        }\n      },\n      () => {\n        // feedback update downloaded message\n        event.sender.send('update-downloaded')\n      }\n    )\n  })\n\n  // Install now\n  ipcMain.handle('quit-and-install', () => {\n    autoUpdater.quitAndInstall(false, true)\n  })\n}\n\nfunction startDownload(\n  callback: (error: Error | null, info: ProgressInfo | null) => void,\n  complete: (event: UpdateDownloadedEvent) => void,\n) {\n  autoUpdater.on('download-progress', (info: ProgressInfo) => callback(null, info))\n  autoUpdater.on('error', (error: Error) => callback(error, null))\n  autoUpdater.on('update-downloaded', complete)\n  autoUpdater.downloadUpdate()\n}\n","import { app, BrowserWindow, shell, ipcMain, Tray, Menu, nativeImage, } from 'electron'\nimport { release } from 'node:os'\nimport { dirname, join } from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport { update } from './update'\n\nconst __filename = fileURLToPath(import.meta.url)\nconst __dirname = dirname(__filename)\n\n// The built directory structure\n//\n// ├─┬ dist-electron\n// │ ├─┬ main\n// │ │ └── index.js    > Electron-Main\n// │ └─┬ preload\n// │   └── index.mjs    > Preload-Scripts\n// ├─┬ dist\n// │ └── index.html    > Electron-Renderer\n//\nprocess.env.DIST_ELECTRON = join(__dirname, '../')\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist')\nprocess.env.VITE_PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, '../public')\n  : process.env.DIST\n\n// Disable GPU Acceleration for Windows 7\nif (release().startsWith('6.1')) app.disableHardwareAcceleration()\n\n// Set application name for Windows 10+ notifications\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit()\n  process.exit(0)\n}\n\n// Remove electron security warnings\n// This warning only shows in development mode\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\n// process.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\n\nlet win: BrowserWindow | null = null\n// Here, you can also use other preload\nconst preload = join(__dirname, '../preload/index.mjs')\nconst url = process.env.VITE_DEV_SERVER_URL\nconst indexHtml = join(process.env.DIST, 'index.html')\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    icon: join(process.env.VITE_PUBLIC, 'favicon.ico'),\n    webPreferences: {\n      preload\n    },\n    width: 300,\n    height: 410,\n    frame: false,\n    resizable: false,\n    fullscreen: false\n  })\n\n  win.hide()\n\n  if (url) { // electron-vite-vue#298\n    win.loadURL(url)\n    // Open devTool if the app is not packaged\n    win.webContents.openDevTools()\n  } else {\n    win.loadFile(indexHtml)\n  }\n\n  // Test actively push message to the Electron-Renderer\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\n  })\n\n  // Make all links open with the browser, not with the application\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith('https:')) shell.openExternal(url)\n    return { action: 'deny' }\n  })\n\n  win.on('ready-to-show', () => {\n    win?.webContents.closeDevTools()\n  })\n  // Apply electron-updater\n  update(win)\n\n  return win\n}\n\nlet tray\n\nfunction createTray() {\n  const icon = nativeImage.createFromPath('./src/assets/logo.png')\n  tray = new Tray(icon.resize({ width: 13, height: 21 }))\n\n  return tray\n}\n\nfunction controlWindow(window: BrowserWindow, tray: Tray) {\n  const toggle = () => {\n    if (window.isVisible())\n      window.hide()\n    else\n      showWindow()\n  }\n\n  const showWindow = () => {\n    const winBounds = window.getBounds()\n    const trayBounds = tray.getBounds()\n\n    const x = Math.round(trayBounds.x + (trayBounds.width / 2) - (winBounds.width / 2))\n    const y = Math.round(trayBounds.y + trayBounds.height + 3)\n\n    window.setPosition(x, y)\n    window.show()\n    window.focus()\n  }\n\n  return { toggle }\n}\n\nasync function App() {\n  const window = await createWindow()\n  const tray = createTray()\n  const { toggle } = controlWindow(window, tray)\n\n  window.setAlwaysOnTop(true)\n\n  tray.on('click', toggle)\n}\n\napp.whenReady().then(App)\n\napp.on('window-all-closed', () => {\n  win = null\n  if (process.platform !== 'darwin') app.quit()\n})\n\napp.on('second-instance', () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized()) win.restore()\n    win.focus()\n  }\n})\n\napp.dock.hide()\n\n// app.on('activate', () => {\n//   const allWindows = BrowserWindow.getAllWindows()\n//   if (allWindows.length) {\n//     allWindows[0].focus()\n//   } else {\n//     createWindow()\n//   }\n// })\n\n// New window example arg: new windows url\nipcMain.handle('open-win', (_, arg) => {\n  const childWindow = new BrowserWindow({\n    webPreferences: {\n      preload,\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  })\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    childWindow.loadURL(`${url}#${arg}`)\n  } else {\n    childWindow.loadFile(indexHtml, { hash: arg })\n  }\n})\n\n"],"names":["win","url","tray"],"mappings":"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"}